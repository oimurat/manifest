name: manifest-stg # ワークフロー名を決定

# トリガーの設定
on:
    repository_dispatch:
        types:
            - update-manifest-stg

permissions:
    contents: write
    pull-requests: write

jobs:
    update-manifest:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository # リポジトリのチェックアウト
              uses: actions/checkout@v4

            - name: Set Env # 環境変数の設定
              run: |
                  echo "DATE_TAG=${{ github.event.client_payload.date }}" >> $GITHUB_ENV

            - name: Update manifests # 複数のマニフェストを更新
              uses: mikefarah/yq@master # yqをセットアップするためusesを追加
              with:
                  cmd: |
                      SERVICES="nextjs graphql-service grpc-cart-service grpc-order-service grpc-payment-service grpc-product-service kafka-api kafka-worker workflow-service"
                      for SERVICE in $SERVICES
                      do
                        FILE_PATH="values/internal/${SERVICE}/values-dev.yaml"
                        echo "Updating image tag in ${FILE_PATH}..."
                        yq eval ".deployment.image.name = 'nrt.ocir.io/nrcmxxv7sjse/ec_service_test:stg-${SERVICE}-${DATE_TAG}'" -i "$FILE_PATH"
                      done

            - name: Create Pull Request # プルリクエストの作成
              id: cpr
              uses: peter-evans/create-pull-request@v7
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit-message: "auto update manifest stg"
                  title: "GithubAppを用いた自動マージ(ステージング)"
                  body: "This PR was created automatically by GitHub Actions."
                  branch: update-image-${{ env.DATE_TAG }}
                  base: stg
                  delete-branch: true

            - name: create github app token # GitHub Appトークンの作成
              uses: actions/create-github-app-token@v1
              id: app-token
              with:
                  app-id: ${{ secrets.APP_ID }}
                  private-key: ${{ secrets.PRIVATE_KEY }}

            - name: auto-merge # プルリクエストの自動マージ
              env:
                  PR_URL: ${{steps.cpr.outputs.pull-request-url}}
                  GITHUB_APP_TOKEN: ${{ steps.app-token.outputs.token }}
              run: |
                  echo "$GITHUB_APP_TOKEN" | gh auth login --with-token
                  gh pr review "$PR_URL" --approve
                  gh pr merge --merge --auto --delete-branch "$PR_URL"
